version: "3"

services:
  app:
    image: bookatest/api/app
    build:
      context: ./docker/api
      dockerfile: Dockerfile
    volumes:
      - .:/var/www/html
    networks:
      - app-net
    environment:
      - APP_ENV=local
    ports:
      - "${APP_PORT}:80"

  queue-worker:
    image: bookatest/api/app
    volumes:
      - .:/var/www/html
    networks:
      - app-net
    working_dir: /var/www/html
    command: php artisan queue:work --tries=1

  scheduler:
    image: bookatest/api/app
    volumes:
      - .:/var/www/html
    networks:
      - app-net
    working_dir: /var/www/html
    command: php artisan schedule:loop

  node:
    image: bookatest/api/node
    build:
      context: ./docker/node
      dockerfile: Dockerfile
    volumes:
      - .:/var/www/html

  mysql:
    image: mysql:5.7
    environment:
      MYSQL_ROOT_PASSWORD: "${DB_ROOT_PASS}"
      MYSQL_DATABASE: "${DB_NAME}"
      MYSQL_USER: "${DB_USER}"
      MYSQL_PASSWORD: "${DB_PASS}"
    volumes:
      - mysql-data:/var/lib/mysql
    networks:
      - app-net
    ports:
      - "${DB_PORT}:3306"

  mysql-testing:
    image: mysql:5.7
    environment:
      MYSQL_ROOT_PASSWORD: "${DB_ROOT_PASS}"
      MYSQL_DATABASE: "${DB_NAME}"
      MYSQL_USER: "${DB_USER}"
      MYSQL_PASSWORD: "${DB_PASS}"
    networks:
      - app-net

  redis:
    image: redis:5.0-alpine
    volumes:
      - redis-data:/data
    networks:
      - app-net

  redis-testing:
    image: redis:5.0-alpine
    networks:
      - app-net

  troposphere:
    image: bookatest/api/troposphere
    build:
      context: ./docker/troposphere
      dockerfile: Dockerfile
    volumes:
      - ./aws:/tmp
    command: "python ${CFN_TEMPLATE}.py"

networks:
  app-net:
    driver: bridge

volumes:
  mysql-data:
    driver: local
  redis-data:
    driver: local
