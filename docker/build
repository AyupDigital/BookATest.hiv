#!/usr/bin/env bash

# Bail out on first error.
set -e

# Package the app.
cd ${TRAVIS_BUILD_DIR}
# "archive" gives us useful tools - we can use .gitattributes
# to `export-ignore` extraneous files.
git archive --format=tar --worktree-attributes ${TRAVIS_COMMIT} | tar -xf -  -C ${TRAVIS_BUILD_DIR}/docker/api/packaged

# Production Build Steps.
cd ${TRAVIS_BUILD_DIR}/docker/api/packaged
./develop composer install --no-dev
./develop npm install
./develop npm run prod
rm -rf node_modules

# Get the .env file.
aws secretsmanager get-secret-value \
    --secret-id ${ENV_SECRET_ID} | \
    python -c "import json,sys;obj=json.load(sys.stdin);print obj['SecretString'];" > .env

# Build the Docker image with latest code.
cd ${TRAVIS_BUILD_DIR}/docker/api
docker build \
    -t ${REPO_URI}:latest \
    -t ${REPO_URI}:${TRAVIS_COMMIT} .

# Clean up packaged directory.
cd ${TRAVIS_BUILD_DIR}/docker/api/packaged
PWD=$(pwd)
if [ "$PWD" == "$TRAVIS_BUILD_DIR/docker/api/packaged" ]; then
    # The "vendor" directory (any any built assets!) will be owned
    # as user "root" on the Linux file system
    # So we'll use Docker to delete them with a one-off container
    docker run --rm \
        -w /opt \
        -v $(pwd):/opt ubuntu:16.04 bash -c "rm -rf ./* && rm -rf ./.git* && rm .env*"
    touch .gitkeep
fi
