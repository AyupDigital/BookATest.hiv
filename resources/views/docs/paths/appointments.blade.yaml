clinics.clinic_id.appointments:
  get:
    tags:
      - "Appointments"
    summary: "List all the appointments at a clinic"
    operationId: "clinics.appointments.index"
    security: []
    parameters:
      - $ref: "/docs/parameters/id.yaml#/clinic_id"
      - name: "format"
        in: "query"
        description: "The format of the appointments"
        schema:
          type: "string"
          enum: ["json", "ics"]
          default: "json"
      - name: "calendar_feed_token"
        in: "query"
        description: "The user's calendar feed token - required if the format is set to `ics`"
        schema:
          type: "string"
      - name: "available"
        in: "query"
        description: >
          If only available appointments should be returned. If the user is not authenticated, then they can only see
          appointments which are available.
        schema:
          type: "boolean"
    responses:
      200:
        description: "Successful response"
        content:
          application/json:
            schema:
              $ref: "/docs/schemas/appointment.yaml#/AppointmentCollection"
          text/calendar:
  post:
    tags:
      - "Appointments"
    summary: "Create a new appointment"
    operationId: "clinics.appointments.store"
    parameters:
      - $ref: "/docs/parameters/id.yaml#/clinic_id"
    requestBody:
      required: true
      content:
        application/json:
          schema:
            $ref: "/docs/schemas/appointment.yaml#/ModifyAppointment"
    responses:
      200:
        description: "Successful response"
        content:
          application/json:
            schema:
              $ref: "/docs/schemas/appointment.yaml#/Appointment"

users.user_id.appointments:
  get:
    tags:
      - "Appointments"
    summary: "List all appointments for a specified user"
    operationId: "users.appointments.list"
    parameters:
      - $ref: "/docs/parameters/id.yaml#/user_id"
      - name: "format"
        in: "query"
        description: "The format of the appointments"
        schema:
          type: "string"
          enum: ["json", "ics"]
          default: "json"
    responses:
      200:
        description: "Successful response"
        content:
          application/json:
            schema:
              $ref: "/docs/schemas/appointment.yaml#/AppointmentCollection"
          text/calendar:

service-users.service_user_uuid.appointments:
  get:
    tags:
      - "Appointments"
    summary: "List all appointments for a specified service user"
    operationId: "service-users.appointments.list"
    parameters:
      - $ref: "/docs/parameters/id.yaml#/service_user_uuid"
    responses:
      200:
        description: "Successful response"
        content:
          application/json:
            schema:
              $ref: "/docs/schemas/appointment.yaml#/AppointmentCollection"

appointments:
  get:
    tags:
      - "Appointments"
    summary: "List all appointments"
    operationId: "appointments.list"
    parameters:
      - $ref: "/docs/parameters/id.yaml#/id"
    responses:
      200:
        description: "Successful response"
        content:
          application/json:
            schema:
              $ref: "/docs/schemas/appointment.yaml#/AppointmentCollection"

appointments.appointment_id:
  get:
    tags:
      - "Appointments"
    summary: "Get a specific appointment"
    operationId: "appointments.show"
    parameters:
      - $ref: "/docs/parameters/id.yaml#/appointment_id"
    responses:
      200:
        description: "Successful response"
        content:
          application/json:
            schema:
              $ref: "/docs/schemas/appointment.yaml#/Appointment"
  put:
    tags:
      - "Appointments"
    summary: "Update a specific appointment"
    operationId: "appointments.update"
    parameters:
      - $ref: "/docs/parameters/id.yaml#/appointment_id"
    requestBody:
      required: true
      content:
        application/json:
          schema:
            $ref: "/docs/schemas/appointment.yaml#/ModifyAppointment"
    responses:
      200:
        description: "Successful response"
        content:
          application/json:
            schema:
              $ref: "/docs/schemas/appointment.yaml#/Appointment"
  delete:
    tags:
      - "Appointments"
    summary: "Delete a specific appointment"
    operationId: "appointments.destroy"
    parameters:
      - $ref: "/docs/parameters/id.yaml#/appointment_id"
    responses:
      200:
        description: "Successful response"
        content:
          application/json:
            schema:
              $ref: "/docs/schemas/responses.yaml#/DeletedResponse"

appointments.appointment_id.cancel:
  put:
    tags:
      - "Appointments"
    summary: "Cancel a specific appointment"
    operationId: "appointments.cancel.update"
    parameters:
      - $ref: "/docs/parameters/id.yaml#/appointment_id"
    responses:
      200:
        description: "Successful response"
        content:
          application/json:
            schema:
              $ref: "/docs/schemas/appointment.yaml#/Appointment"
